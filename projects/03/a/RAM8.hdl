// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=d0, b=d1, c=d2, d=d3, e=d4, f=d5, g=d6, h=d7);

    Mux16(a=false, b=in, sel=d0, out=regin0);
    Mux16(a=false, b=in, sel=d1, out=regin1);
    Mux16(a=false, b=in, sel=d2, out=regin2);
    Mux16(a=false, b=in, sel=d3, out=regin3);
    Mux16(a=false, b=in, sel=d4, out=regin4);
    Mux16(a=false, b=in, sel=d5, out=regin5);
    Mux16(a=false, b=in, sel=d6, out=regin6);
    Mux16(a=false, b=in, sel=d7, out=regin7);

    Register(in=regin0, load=d0, out=regout0);
    Register(in=regin1, load=d1, out=regout1);
    Register(in=regin2, load=d2, out=regout2);
    Register(in=regin3, load=d3, out=regout3);
    Register(in=regin4, load=d4, out=regout4);
    Register(in=regin5, load=d5, out=regout5);
    Register(in=regin6, load=d6, out=regout6);
    Register(in=regin7, load=d7, out=regout7);

    Mux8Way16(a=regout0, b=regout1, c=regout2, d=regout3, e=regout4, f=regout5, g=regout6, h=regout7, sel=address, out=out);
}