// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=d0, b=d1, c=d2, d=d3);

    Mux16(a=false, b=in, sel=d0, out=ram0in);
    Mux16(a=false, b=in, sel=d1, out=ram1in);
    Mux16(a=false, b=in, sel=d2, out=ram2in);
    Mux16(a=false, b=in, sel=d3, out=ram3in);

    RAM4K(in=ram0in, load=d0, address=address[0..11], out=ram0out);
    RAM4K(in=ram1in, load=d1, address=address[0..11], out=ram1out);
    RAM4K(in=ram2in, load=d2, address=address[0..11], out=ram2out);
    RAM4K(in=ram3in, load=d3, address=address[0..11], out=ram3out);

    Mux4Way16(a=ram0out, b=ram1out, c=ram2out, d=ram3out, sel=address[12..13], out=out);
}